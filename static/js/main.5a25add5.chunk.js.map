{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","maxId","Math","max","App","useState","setTitle","selectedUser","setSelectedUser","hasTitleError","setTitleError","hasUserError","setUserError","visibleTodos","setVisibleTodos","onSubmit","event","preventDefault","newTodo","Number","htmlFor","type","value","placeholder","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a25add5.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUserById = (userId: number) => usersFromServer\n  .find(user => user.id === userId)\n  || null;\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nlet maxId = Math.max(...todos.map(todo => todo.id));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserError, setUserError] = useState(false);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n\n  const createNewTodo = () => {\n    maxId += 1;\n\n    return {\n      id: maxId,\n      title,\n      completed: false,\n      userId: Number(selectedUser),\n      user: getUserById(Number(selectedUser)),\n    };\n  };\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!selectedUser);\n\n    if (title && selectedUser) {\n      const newTodo = createNewTodo();\n\n      setVisibleTodos([\n        ...visibleTodos,\n        newTodo,\n      ]);\n\n      setTitle('');\n      setSelectedUser('');\n    }\n  };\n\n  const handleTitleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.replace(/[^a-zA-Z0-9 ]/g, ''));\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            {'Title: '}\n            <input\n              type=\"text\"\n              id=\"title\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={selectedUser}\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}